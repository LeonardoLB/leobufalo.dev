<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2019-04-03T16:22:03-03:00</updated><id>/feed.xml</id><title type="html">Leonardo Lemes Bufalo</title><subtitle>A blog about technology, travels and experiences of my life.</subtitle><entry><title type="html">Harbor - Estrutura para desenvolver seu Front-end</title><link href="/harbor/" rel="alternate" type="text/html" title="Harbor - Estrutura para desenvolver seu Front-end" /><published>2019-03-28T10:30:00-03:00</published><updated>2019-03-28T10:30:00-03:00</updated><id>/harbor</id><content type="html" xml:base="/harbor/">&lt;p&gt;Harbor é uma estrutura bem simples para fácilitar o desenvolvimento
do seu Front-end, possibilitando uma forma de organizar seus arquivos
e entregar uma estrutura mais limpa, dando a possibilidade de criar
componentes de forma fácil e organizada, uma estrutura que te deixa
confortável para incorporar o seu back-end da maneira que desejar.&lt;/p&gt;

&lt;h2 id=&quot;requisitos&quot;&gt;Requisitos&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Npm Package&lt;/li&gt;
  &lt;li&gt;Nodejs&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;como-funciona&quot;&gt;Como funciona&lt;/h2&gt;

&lt;p&gt;A estrutura utiliza o Gulp Js para renderizar as suas views.
A estrutura utiliza dois pré processadores: Pug para HTML e Stylus para CSS.&lt;/p&gt;

&lt;h2 id=&quot;como-faz-para-rodar&quot;&gt;Como faz para rodar?&lt;/h2&gt;

&lt;p&gt;Para rodar o gulp basta acessar a pasta:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;src/tools/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;e executar o comando:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;ainda dentro da pasta &lt;code class=&quot;highlighter-rouge&quot;&gt;tools&lt;/code&gt; basta rodar o comando:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gulp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;a-estrutura&quot;&gt;A estrutura&lt;/h2&gt;

&lt;h1 id=&quot;para-que-serve-cada-pasta&quot;&gt;Para que serve cada pasta?&lt;/h1&gt;

&lt;p&gt;A idéia é que você deixe seus componentes separados, ou seja quanto menor o arquivo, melhor.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---src

------styles

---------components //Aqui você irá criar um arquivo para cada componente .styl

---------helpers // Aqui conterá tudo aquilo que pode lhe auxiliar que não sejá um componente

---------main.styl // Esse é o arquivo que o gulp irá renderizar que importa as duas pastas

------views

---------includes // Aqui você irá criar um arquivo para cada componente .pug assim podera realizar um include caso queira.

------------global // Componentes globais

------------template

---------------main.pug // Todas as paginas pug realizam um include deste template

---------pages // Nesta pasta você poderá criar as suas páginas .pug

------------example.txt // exemplo de como deve ser criado as páginas

---models // Aqui você poderá incorporar as models da maneira como quiser.

---views // Aqui será redenderizado as suas páginas .pug criadas em src/views/pages/.pug em arquivos .html

---assets

------css // Aqui será renderizado um único arquivo .css de todos os arquivos .styl indicados no arquivo main.styl dentro da pasta src/styles/main.styl

------images // pasta de imagens

------js // Nesta pasta deve se encontrar o arquivo bundle.js contendo todo o js do seu projeto em um unico arquivo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;baseado-em&quot;&gt;Baseado em&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;ITCSS
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://willianjusten.com.br/organizando-seu-css-com-itcss/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;OOCSS
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://tableless.com.br/oocss-ou-css-do-jeito-certo/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>leo</name></author><category term="project" /><category term="frontend" /><summary type="html">Harbor é uma estrutura bem simples para fácilitar o desenvolvimento do seu Front-end, possibilitando uma forma de organizar seus arquivos e entregar uma estrutura mais limpa, dando a possibilidade de criar componentes de forma fácil e organizada, uma estrutura que te deixa confortável para incorporar o seu back-end da maneira que desejar.</summary></entry><entry><title type="html">Criando uma API usando NodeJs e Express.js</title><link href="/Criando-uma-api-nodeJs/" rel="alternate" type="text/html" title="Criando uma API usando NodeJs e Express.js" /><published>2019-03-28T10:30:00-03:00</published><updated>2019-03-28T10:30:00-03:00</updated><id>/Criando-uma-api-nodeJs</id><content type="html" xml:base="/Criando-uma-api-nodeJs/">&lt;p&gt;Nesse post vamos criar de maneira simples uma api usando Nodejs e um micro framework
chamado &lt;a href=&quot;https://expressjs.com&quot;&gt;Expressjs&lt;/a&gt;, que nos permite definir rotas de maneira
muito simples, assim podemos criar uma api em alguns minutos e já poder subir em serviços
como por exemplo: &lt;a href=&quot;https://www.heroku.com/&quot;&gt;Heroku&lt;/a&gt;, ou &lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Primeiro vamos dar uma olhada nos requisitos que precisamos para prosseguirmos:&lt;/p&gt;

&lt;h2 id=&quot;requisitos&quot;&gt;Requisitos&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Npm Package&lt;/li&gt;
  &lt;li&gt;Nodejs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vamos começar, escolha um editor de texto da sua preferência, eu particulamente gosto de
utilizar o &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Code&lt;/a&gt;, vamos iniciar o projeto, eu irei
deixar o nome como ‘exemplo-api-express’, abra o projeto em seu terminal e vamos começar a
estruturar nosso pequeno projeto. Abra seu terminal e execute o comendo:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm init -yes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Essa linha irá adicionar ao nosso projeto um arquivo chamado package.json e nele irá conter informações
que o compõem. Se você abrir o package.json deverá se parecer com isso:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
  &quot;name&quot;: &quot;example-api-express&quot;,
  &quot;version&quot;: &quot;1.0.0&quot;,
  &quot;description&quot;: &quot;&quot;,
  &quot;main&quot;: &quot;rotas.js&quot;,
  &quot;scripts&quot;: {
    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;amp;&amp;amp; exit 1&quot;
  },
  &quot;keywords&quot;: [],
  &quot;author&quot;: &quot;&quot;,
  &quot;license&quot;: &quot;ISC&quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Se você não conhece nada sobre o arquivo package.json aconselho uma breve &lt;a href=&quot;https://medium.com/trainingcenter/tudo-que-voc%C3%AA-queria-saber-sobre-o-package-lock-json-mas-estava-com-vergonha-de-perguntar-e70589f2855f&quot;&gt;leitura&lt;/a&gt; para ajudar a entender melhor. Novamente no terminal vamos instalar nosso framework, executando:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install express
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Nesse momento deverá aparecer em seu projeto uma pasta chamada node_modules, nessa pasta contém todas as
nossas dependências, inclusive o express que instalamos a pouco e suas dependências também.&lt;/p&gt;

&lt;p&gt;Agora com o express instalado, vamos usufruir desse belíssimo framework, dentro do projeto crie um arquivo javascript chamado “rotas.js”.&lt;/p&gt;

&lt;p&gt;Agora vamos “requerir” o framework que foi instalado em nossa node_modules para isso vamos adiconar nossa
primeira linha ao arquivo:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;const express = require('express')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;e em seguida vamos startar o express:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;const app = express()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Agora nosso arquivo deve estar assim:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://leobufalo.dev/assets/images/imagemfile1.png&quot;&gt;imagemfile&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nesse momento com apenas 2 linhas escritas já podemos definir nossa primeira rota e para fazer isso vamos adicionar o seguinte código:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;app.get('/rota', function (request, response) {
    response.json(&quot;Rota testada&quot;)
})

app.listen(4001)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Explicando o que aconteceu acima, dentro da instâcia do app temos alguns metodos que podemos utilizar
para que possamos definir a rota e os verbos HTTP, caso não conheça os verbos aconselho mais uma &lt;a href=&quot;https://www.devmedia.com.br/servicos-restful-verbos-http/37103&quot;&gt;leitura&lt;/a&gt;, no exemplo mostrei um simples GET.&lt;/p&gt;

&lt;p&gt;Neste metodo get passamos dois paramêtros, o primeiro é a rota, o caminho que deverá ser requisitado, e o
segundo paramêtro é a função que será executada, também conhecida como callback.&lt;/p&gt;

&lt;p&gt;O nosso callback recebe dois paramêtros, o resquest e response, no response é onde temos informações de
requisições como POST, PUT, DELETE entre outros, e no response é onde devolvemos a resposta da requisição.&lt;/p&gt;

&lt;p&gt;O metodo app.listen() informa em qual porta do nosso querio 127.0.0.1 será executado nossa api então basta informar uma porta que não esteja sendo utilizada!&lt;/p&gt;

&lt;p&gt;Agora seu arquivo deve estar assim:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://leobufalo.dev/assets/images/imagemfile2.png&quot;&gt;imagemfile2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nesse momento execute em seu terminal&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;node rotas.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pronto! Se você acessar&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;127.0.0.1/rotas
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://leobufalo.dev/assets/images/imagemfile3.png&quot;&gt;imagemfile3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ja poderemos visualizar nosso retorno! e nesse momento já criamos uma api com uma rota
que devolve um valor conteúdo com poucas linhas&lt;/p&gt;</content><author><name>leo</name></author><category term="blog" /><category term="api" /><category term="nodejs" /><category term="expressjs" /><category term="development" /><summary type="html">Nesse post vamos criar de maneira simples uma api usando Nodejs e um micro framework chamado Expressjs, que nos permite definir rotas de maneira muito simples, assim podemos criar uma api em alguns minutos e já poder subir em serviços como por exemplo: Heroku, ou Netlify.</summary></entry><entry><title type="html">Aprendizado e Frustração</title><link href="/aprendizado-e-frustracao/" rel="alternate" type="text/html" title="Aprendizado e Frustração" /><published>2019-03-27T00:36:00-03:00</published><updated>2019-03-27T00:36:00-03:00</updated><id>/aprendizado-e-frustracao</id><content type="html" xml:base="/aprendizado-e-frustracao/">&lt;p&gt;A humanidade nunca teve tanta facilidade para consumir conteúdo, em toda a nossa história nunca teve tanta praticidade para acessar inúmeros cursos ou artigos sobre assuntos de nossos interesses nesse universo repleto de requests e responses, porém, também nunca tivemos um índice tão alto de ansiedade que hoje já foi considerado um dos males deste século.&lt;/p&gt;

&lt;p&gt;Quando descobrimos um assunto que nos interessa, buscamos conteúdos a respeito para aprendermos mais sobre isso, e isso é muito bom, descobrir novos conteúdos nos permite cada vez mais conhecer novos horizontes e assim abrir um oceano de vídeos, artigos, cursos incríveis para consumir, basta apenas aprender a navegar, mas quanto mais e mais navegamos pelos mares do aprendizado, cada vez mais queremos navegar mais rápido, e nesses momentos pode nascer um problema que não percebemos a tempo a SPA(síndrome do pensamento acelerado), acredito que já deve ter lido sobre, mas caso não, iremos abordar um pouco sobre a SPA neste texto.&lt;/p&gt;

&lt;p&gt;Aprender algo ontem nos torna de certa forma melhor hoje, e se cada dia nos aprendermos algo novo com certeza iremos estar melhor amanhã, porem vamos trazer esses aprendizados para o mundo da programação, digamos que você está iniciando nesse universo, ou um colega de trabalho ao seu lado, um amigo, enfim, inicialmente é comum que quando entramos nesse universo já nos deparamos com uma escolha backend, frontend ou full stack? No início é sempre uma escolha que tende as primeiras oportunidades de trabalho e conhecendo mais, a pessoa acaba orientando seus estudos para um desses caminhos, imagine um caminho assim:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://leobufalo.dev/assets/images/imagem1.png&quot; alt=&quot;example1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Então agora vamos mostrar um pouco mais do que esses caminhos podem oferecer:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://leobufalo.dev/assets/images/imagem2.png&quot; alt=&quot;example2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Bastante coisa, não acha? E acredite tem muito mais! São nesses momentos onde a SPA entra em ação, há tantas coisas para estudar, há inúmeras coisas que não sabemos para aprender e colocar em prática que nos perdemos em nossos próprios pensamentos e mergulhamos em incontáveis pensamentos como: “Assim que terminar de aprender o conteúdo A, irei para o B e após ao C”, em questões de organização é ótimo planejar, mas isso nos faz cair facilmente em uma grande auto sabotagem, onde criamos em nossa mente, inúmeras imaginações que não existem, e pensamos demais, e assim deixando de agir, gastamos muita energia pensando, imaginando, sonhando, e quando vamos agir, na hora de estudar e executar já estamos exaustos, até parece que entramos na matrix e lutamos com milhares de agentes, não é?&lt;/p&gt;

&lt;p&gt;Agora vem o pior, onde muitos se desanimam, inclusive por onde já trilhei caminho, nesse momento vamos adicionar uma pitada de frustração, imagine que você está estudando muito, e quando vai executar algo você simplesmente esquece, sabe aquele projeto que você está fazendo com muito entusiasmo? Sim esse mesmo, você travou em uma parte e não consegue mais evoluir! Ou se você trabalha em uma agência, te pedem um site em apenas quatro dias, sim é real, então, você não conseguiu entregar! Situação como essas são horríveis para alguém que se cobra evoluir constantemente, e se você sente isso, preciso te dizer, parabéns! O fato de cobrar evolução de si mesmo, ter feito o possível, mas mesmo assim querer mais, isso é apenas você sentindo que pode ir mais longe, e você pode, mas isso não significa que você irá dominar tudo em poucos dias. A Frustração nos traz uma das piores sensações que temos durante a vida, a incompetência, esse sentimento é perigoso, nos faz pensar que não somos qualificados ou que não somos bons o suficiente para realizar algo, cuidado, e pode parar por aí mesmo, já vamos falar como lidar isso!&lt;/p&gt;

&lt;p&gt;Augusto Cury em uma de suas teorias aborda a inteligência multifocal, a forma com o qual estruturamos nossos pensamentos, considerando, nossa história, como, quando e onde aprendemos determinados conhecimentos, existem inúmeras reações inconscientes que nos atrapalham ou nos ajudam a desenvolver certas habilidades, e conhecer isso apenas reforça a ideia que todos nós absorvemos conteúdos de forma diferente em velocidades diferentes, e é isso que nos tornas especiais, as vezes somos melhores no assunto “A” que outra pessoa, mas ela por sua experiência é melhor no assunto “B”, e isso é normal!&lt;/p&gt;

&lt;p&gt;Temos que ter estar cientes que a frustração anda de mãos dadas com o aprendizado e cabe a cada um que está consumindo esse texto lidar da melhor forma possível, afinal aprender é um caminho árduo! Muitas vezes nos vemos sem saída para aprender algo, uma das melhores coisas que podemos realizar é a busca por um mentor! Ter um mentor, que pode lhe dizer qual caminho seguir, indicar novos conteúdos para pesquisar e te orientar, ter pessoas assim contigo, é muito importante para evoluir, mas tenha paciência, um passo de cada vez e logo você terá andando mais do que pareceu.&lt;/p&gt;

&lt;p&gt;Persistir é importante! Mantenha-se sempre estudando, na primeira vez será difícil, na segunda será desgastante, mas na terceira em diante terá sido mais fácil.&lt;/p&gt;</content><author><name>leo</name></author><category term="blog" /><category term="people" /><category term="development" /><category term="learn" /><summary type="html">A humanidade nunca teve tanta facilidade para consumir conteúdo, em toda a nossa história nunca teve tanta praticidade para acessar inúmeros cursos ou artigos sobre assuntos de nossos interesses nesse universo repleto de requests e responses, porém, também nunca tivemos um índice tão alto de ansiedade que hoje já foi considerado um dos males deste século.</summary></entry></feed>